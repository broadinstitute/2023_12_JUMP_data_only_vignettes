[
  {
    "objectID": "pills/tutorials/basic.html",
    "href": "pills/tutorials/basic.html",
    "title": "Basic JUMP data access",
    "section": "",
    "text": "This is a tutorial on how to access We will use polars to fetch the data frame lazily, with the help of s3fs and pyarrow. We prefer lazy loading because the data can be too big to be handled in memory.\n\nimport polars as pl\nfrom pyarrow.dataset import dataset\nfrom s3fs import S3FileSystem\n\nThe shapes of the available datasets are: - crispr: Knock-out genetic perturbations. - orf: Overexpression genetic perturbations. - compounds: Chemical genetic perturbations.\nThe aws paths of the dataframes are shown below:\n\nprefix = (\n    \"s3://cellpainting-gallery/cpg0016-jump-integrated/source_all/workspace/profiles\"\n)\nfilepaths = dict(\n    crispr=f\"{prefix}/chandrasekaran_2024_0000000/crispr/wellpos_cellcount_mad_outlier_nan_featselect_harmony.parquet\",\n    orf=f\"{prefix}/chandrasekaran_2024_0000000/orf/wellpos_cellcount_mad_outlier_nan_featselect_harmony.parquet\",\n    compound=f\"{prefix}/arevalo_2023_e834481/compound/mad_int_featselect_harmony.parquet/\",\n)\n\nWe use a S3FileSystem to avoid the need of credentials.\n\ndef lazy_load(path: str) -&gt; pl.DataFrame:\n    fs = S3FileSystem(anon=True)\n    myds = dataset(path, filesystem=fs)\n    df = pl.scan_pyarrow_dataset(myds)\n    return df\n\nWe will lazy load the data to visualise its columns\n\nprint(\"Width, or number of columns.\")\nfor name, path in filepaths.items():\n    data = lazy_load(path)\n    metadata_cols = [col for col in data.columns if col.startswith(\"Metadata\")]\n    print(f\"{name}: {data.width}, containing {len(metadata_cols)} metadata columns\")\n\nWidth, or number of columns.\ncrispr: 1119, containing 8 metadata columns\norf: 882, containing 20 metadata columns\ncompound: 979, containing 10 metadata columns\n\n\nLet us now focus on the crispr dataset and print its first few lines.\n\ndata = lazy_load(filepaths[\"crispr\"])\ndata.head()\n\nnaive plan: (run LazyFrame.explain(optimized=True) to see the optimized plan)\n    \n    SLICE[offset: 0, len: 5]    PYTHON SCAN     PROJECT */1119 COLUMNS",
    "crumbs": [
      "Pills",
      "Tutorials",
      "Basic JUMP data access"
    ]
  }
]