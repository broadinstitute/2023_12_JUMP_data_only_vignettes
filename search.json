[
  {
    "objectID": "documentation/Explanations/Resources.html",
    "href": "documentation/Explanations/Resources.html",
    "title": "Available resources",
    "section": "",
    "text": "Available resources\n\n\n\nAvailable resources\n\nHome [website](https://jump-cellpainting.broadinstitute.org/): Access news and related publications.\nWe provide Open Source Web “JUMPer” interfaces for all three datasets:\n\nExplore all images with an available morphological profile: CRISPR, ORF, Compounds.\nExplore the most similar matches for any given perturbation: CRISPR, ORF\nExplore the most distinctive features for any given gene: ORF\n\n\nPending interfaces are work in progress. More details can be found here.\n\nArdigen provides a website to explore a representation (requires creating a free account).",
    "crumbs": [
      "Documentation",
      "Explanations",
      "Available resources"
    ]
  },
  {
    "objectID": "documentation/tutorials/tutorial_basic.html",
    "href": "documentation/tutorials/tutorial_basic.html",
    "title": "Basic JUMP data access",
    "section": "",
    "text": "This is a tutorial on how to access JUMP-Cellpainting data. We will use polars to fetch the data frame lazily, with the help of s3fs and pyarrow. We prefer lazy loading because the data can be too big to be handled in memory.\n\n\nCode\nimport polars as pl\nfrom pyarrow.dataset import dataset\nfrom s3fs import S3FileSystem\n\n\nThe shapes of the available datasets are:\n\ncrispr: Knock-out genetic perturbations.\norf: Overexpression genetic perturbations.\ncompounds: Chemical genetic perturbations.\n\nThe aws paths of the dataframes are shown below:\n\n\nCode\nprefix = (\n    \"s3://cellpainting-gallery/cpg0016-jump-integrated/source_all/workspace/profiles\"\n)\nfilepaths = dict(\n    crispr=f\"{prefix}/chandrasekaran_2024_0000000/crispr/wellpos_cellcount_mad_outlier_nan_featselect_harmony.parquet\",\n    orf=f\"{prefix}/chandrasekaran_2024_0000000/orf/wellpos_cellcount_mad_outlier_nan_featselect_harmony.parquet\",\n    compound=f\"{prefix}/arevalo_2023_e834481/compound/mad_int_featselect_harmony.parquet/\",\n)\n\n\nWe use a S3FileSystem to avoid the need of credentials.\n\n\nCode\ndef lazy_load(path: str) -&gt; pl.DataFrame:\n    fs = S3FileSystem(anon=True)\n    myds = dataset(path, filesystem=fs)\n    df = pl.scan_pyarrow_dataset(myds)\n    return df\n\n\nWe will lazy-load the dataframes and print the number of rows and columns\n\n\nCode\ninfo = {k: [] for k in (\"dataset\", \"#rows\", \"#cols\", \"#Metadata cols\", \"Size (MB)\")}\nfor name, path in filepaths.items():\n    data = lazy_load(path)\n    n_rows = data.select(pl.count()).collect().item()\n    metadata_cols = data.select(pl.col(\"^Metadata.*$\")).columns\n    n_cols = data.width\n    n_meta_cols = len(metadata_cols)\n    estimated_size = int(round(4.03 * n_rows * n_cols / 1e6, 0))  # B -&gt; MB\n    for k, v in zip(info.keys(), (name, n_rows, n_cols, n_meta_cols, estimated_size)):\n        info[k].append(v)\n\npl.DataFrame(info)\n\n\n\n\nshape: (3, 5)\n\n\n\ndataset\n#rows\n#cols\n#Metadata cols\nSize (MB)\n\n\nstr\ni64\ni64\ni64\ni64\n\n\n\n\n\"crispr\"\n51185\n1119\n8\n231\n\n\n\"orf\"\n72343\n882\n20\n257\n\n\n\"compound\"\n806921\n979\n10\n3184\n\n\n\n\n\n\n\nLet us now focus on the crispr dataset and use a regex to select the metadata columns. We will then sample rows and display the overview. Note that the collect() method enforces loading some data into memory.\n\n\nCode\ndata = lazy_load(filepaths[\"crispr\"])\ndata.select(pl.col(\"^Metadata.*$\").sample(n=5, seed=1)).collect()\n\n\n\n\nshape: (5, 8)\n\n\n\nMetadata_Source\nMetadata_Plate\nMetadata_Well\nMetadata_JCP2022\nMetadata_Batch\nMetadata_PlateType\nMetadata_Row\nMetadata_Column\n\n\nstr\nstr\nstr\nstr\nstr\nstr\nstr\nstr\n\n\n\n\n\"source_13\"\n\"CP-CC9-R1-18\"\n\"M22\"\n\"JCP2022_802175…\n\"20220914_Run1\"\n\"CRISPR\"\n\"M\"\n\"22\"\n\n\n\"source_13\"\n\"CP-CC9-R1-11\"\n\"I06\"\n\"JCP2022_801212…\n\"20220914_Run1\"\n\"CRISPR\"\n\"I\"\n\"06\"\n\n\n\"source_13\"\n\"CP-CC9-R2-14\"\n\"M13\"\n\"JCP2022_804709…\n\"20221009_Run2\"\n\"CRISPR\"\n\"M\"\n\"13\"\n\n\n\"source_13\"\n\"CP-CC9-R3-06\"\n\"B10\"\n\"JCP2022_800534…\n\"20221017_Run3\"\n\"CRISPR\"\n\"B\"\n\"10\"\n\n\n\"source_13\"\n\"CP-CC9-R7-28\"\n\"A14\"\n\"JCP2022_800001…\n\"20221120_Run6\"\n\"CRISPR\"\n\"A\"\n\"14\"\n\n\n\n\n\n\n\nThe following line excludes the metadata columns:\n\n\nCode\ndata_only = data.select(pl.all().exclude(\"^Metadata.*$\").sample(n=5, seed=1)).collect()\ndata_only\n\n\n\n\nshape: (5, 1_111)\n\n\n\nX_harmony_0000\nX_harmony_0001\nX_harmony_0002\nX_harmony_0003\nX_harmony_0004\nX_harmony_0005\nX_harmony_0006\nX_harmony_0007\nX_harmony_0008\nX_harmony_0009\nX_harmony_0010\nX_harmony_0011\nX_harmony_0012\nX_harmony_0013\nX_harmony_0014\nX_harmony_0015\nX_harmony_0016\nX_harmony_0017\nX_harmony_0018\nX_harmony_0019\nX_harmony_0020\nX_harmony_0021\nX_harmony_0022\nX_harmony_0023\nX_harmony_0024\nX_harmony_0025\nX_harmony_0026\nX_harmony_0027\nX_harmony_0028\nX_harmony_0029\nX_harmony_0030\nX_harmony_0031\nX_harmony_0032\nX_harmony_0033\nX_harmony_0034\nX_harmony_0035\nX_harmony_0036\n…\nX_harmony_1074\nX_harmony_1075\nX_harmony_1076\nX_harmony_1077\nX_harmony_1078\nX_harmony_1079\nX_harmony_1080\nX_harmony_1081\nX_harmony_1082\nX_harmony_1083\nX_harmony_1084\nX_harmony_1085\nX_harmony_1086\nX_harmony_1087\nX_harmony_1088\nX_harmony_1089\nX_harmony_1090\nX_harmony_1091\nX_harmony_1092\nX_harmony_1093\nX_harmony_1094\nX_harmony_1095\nX_harmony_1096\nX_harmony_1097\nX_harmony_1098\nX_harmony_1099\nX_harmony_1100\nX_harmony_1101\nX_harmony_1102\nX_harmony_1103\nX_harmony_1104\nX_harmony_1105\nX_harmony_1106\nX_harmony_1107\nX_harmony_1108\nX_harmony_1109\nX_harmony_1110\n\n\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\n…\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\nf32\n\n\n\n\n9.361584\n6.530478\n-1.716416\n6.645545\n25.779781\n11.535815\n1.283776\n-6.895683\n1.158157\n0.396796\n-1.228025\n3.377993\n-1.75804\n1.45298\n2.826616\n-0.766564\n-1.336008\n0.276548\n-2.972608\n-3.659549\n-0.121654\n-3.550442\n-1.438127\n-0.107871\n-5.591663\n0.980544\n-1.716685\n-1.967064\n-4.226424\n-0.825578\n0.450683\n1.112127\n1.800478\n2.862669\n2.590048\n-2.461001\n1.251567\n…\n0.000011\n-0.000138\n-0.000103\n-0.000024\n-0.000016\n0.000012\n-0.000011\n0.00001\n0.000039\n-0.000018\n-0.000012\n-0.000048\n0.000015\n1.2242e-7\n0.000002\n0.000002\n-0.000001\n3.8684e-7\n0.000002\n0.000001\n-7.3018e-7\n-2.7078e-7\n-4.5346e-7\n-4.3987e-7\n-0.000002\n0.000002\n7.1491e-7\n0.000001\n0.000004\n0.000002\n-0.000001\n5.3963e-7\n-2.9712e-7\n7.2483e-7\n2.6507e-7\n1.5650e-7\n6.8139e-9\n\n\n15.324629\n-12.011567\n10.789\n-7.066921\n-4.209513\n5.121202\n-8.713844\n7.204117\n9.046068\n12.275903\n0.857379\n-7.84518\n4.997795\n-0.447989\n6.068231\n-1.845758\n2.624747\n2.779137\n6.225565\n-2.251927\n2.294334\n-1.225799\n-2.050748\n1.42566\n-0.655869\n0.458298\n2.760574\n-3.472524\n3.045291\n-0.36204\n0.642912\n1.547744\n1.198635\n-1.38578\n-0.843252\n2.091327\n-0.182866\n…\n0.000077\n0.000093\n-0.000076\n0.000019\n-0.000008\n0.000013\n-0.000024\n0.000031\n-0.00002\n0.000022\n-0.000026\n-0.000025\n0.000031\n0.000004\n-7.8682e-7\n-0.000004\n-8.8845e-7\n1.1373e-7\n-7.2579e-7\n2.7222e-7\n-1.0680e-7\n5.0206e-7\n0.000001\n4.0762e-7\n-4.4007e-9\n3.1106e-8\n-9.7096e-8\n4.0067e-7\n-1.5318e-7\n3.8762e-8\n-3.9477e-7\n1.5968e-7\n-3.0728e-7\n-4.9882e-8\n-6.6351e-8\n-2.2872e-8\n2.0997e-8\n\n\n-4.969159\n3.992823\n-1.302479\n-0.600154\n-9.843822\n-5.562257\n-1.048905\n1.818262\n3.952401\n1.111358\n0.805683\n-1.931647\n-0.205214\n-3.510381\n5.320718\n-4.675041\n5.453409\n-4.154353\n3.822637\n-2.085465\n2.257972\n2.547817\n-0.390387\n0.785258\n-0.354528\n1.962242\n0.479432\n2.958618\n3.25904\n-0.001505\n-0.752498\n0.085932\n3.564981\n-4.053567\n-1.673632\n0.759817\n0.874389\n…\n-0.000043\n-0.000044\n0.000014\n0.000014\n-0.000005\n-0.000006\n0.000001\n0.000016\n-0.000017\n-0.000008\n-0.000015\n0.000008\n0.000039\n0.000005\n0.000003\n0.000003\n-1.4506e-7\n5.2877e-7\n-1.7568e-7\n3.2708e-7\n-6.3083e-7\n8.8414e-7\n-1.2686e-7\n-1.6917e-7\n-7.8753e-8\n-5.1973e-7\n-9.5680e-7\n9.8173e-11\n-5.2809e-7\n1.5538e-7\n6.3096e-8\n-5.2425e-7\n-4.6254e-7\n-4.7054e-7\n-8.6387e-7\n3.8837e-7\n2.3765e-8\n\n\n-15.636988\n16.426058\n-7.53092\n1.706111\n-0.93678\n1.066809\n1.714377\n-7.318254\n1.92585\n-7.707973\n-7.39311\n10.3325\n-1.474021\n-1.270045\n-5.353014\n1.702576\n-2.849749\n1.31164\n-0.323989\n1.315772\n0.699995\n7.372146\n-0.061747\n-2.439324\n0.439738\n-4.074307\n1.945489\n2.675013\n2.355369\n1.754985\n-1.49657\n-1.227039\n-4.667476\n1.140982\n-2.306938\n-2.780305\n-3.35591\n…\n-0.000034\n0.000006\n0.000018\n-0.00001\n0.000008\n-0.000019\n0.000033\n0.000016\n-0.000004\n0.000024\n-0.000008\n0.000005\n-0.000006\n-0.000007\n0.000008\n-0.000002\n6.2199e-7\n-0.000001\n-9.5765e-8\n8.7534e-7\n-4.4705e-7\n0.000002\n-3.5930e-7\n-4.5104e-7\n5.7023e-7\n0.000002\n0.000001\n-1.6617e-7\n2.7281e-7\n-5.8306e-7\n6.2303e-7\n4.5431e-7\n-0.000002\n-0.000001\n-2.3632e-7\n5.2274e-7\n-9.9301e-8\n\n\n18.056057\n-29.029478\n17.150257\n0.135888\n5.62967\n-23.0289\n-2.309639\n10.667803\n-2.007716\n1.470535\n4.083168\n0.536799\n-1.532629\n5.816861\n11.139304\n-1.160438\n-0.142918\n1.496712\n0.190935\n3.350455\n1.128711\n-0.771448\n-0.127811\n0.862468\n0.850379\n-0.567095\n3.42321\n-3.417186\n-0.868503\n1.818214\n3.845392\n-1.58537\n-2.064047\n-2.906976\n3.586654\n-3.218222\n-2.87712\n…\n0.000084\n0.000062\n-0.000062\n0.000042\n-6.6376e-7\n-0.000004\n-0.000021\n-2.1329e-7\n-0.000006\n0.000028\n0.000047\n0.000011\n-0.000008\n0.000014\n-0.000001\n-0.000003\n-6.0309e-7\n3.0687e-7\n-0.000001\n-0.000002\n1.8980e-7\n-8.4804e-8\n-3.9841e-7\n4.5908e-7\n0.000001\n-0.000002\n-0.000001\n-0.000001\n-0.000001\n-2.3676e-7\n-9.5032e-7\n5.8068e-7\n-4.1590e-7\n-4.6222e-7\n5.4494e-8\n5.1991e-7\n-9.6041e-8\n\n\n\n\n\n\n\nFinally, we can convert this to pandas if we want to perform analyses with that tool. Keep in mind that this loads the entire dataframe into memory.\n\n\nCode\ndata_only.to_pandas()\n\n\n\n\n\n\n\n\n\n\nX_harmony_0000\nX_harmony_0001\nX_harmony_0002\nX_harmony_0003\nX_harmony_0004\nX_harmony_0005\nX_harmony_0006\nX_harmony_0007\nX_harmony_0008\nX_harmony_0009\n...\nX_harmony_1101\nX_harmony_1102\nX_harmony_1103\nX_harmony_1104\nX_harmony_1105\nX_harmony_1106\nX_harmony_1107\nX_harmony_1108\nX_harmony_1109\nX_harmony_1110\n\n\n\n\n0\n9.361584\n6.530478\n-1.716416\n6.645545\n25.779781\n11.535815\n1.283776\n-6.895683\n1.158157\n0.396796\n...\n1.062320e-06\n3.846739e-06\n1.688574e-06\n-1.493766e-06\n5.396316e-07\n-2.971211e-07\n7.248348e-07\n2.650708e-07\n1.565047e-07\n6.813909e-09\n\n\n1\n15.324629\n-12.011567\n10.789000\n-7.066921\n-4.209513\n5.121202\n-8.713844\n7.204117\n9.046068\n12.275903\n...\n4.006653e-07\n-1.531818e-07\n3.876220e-08\n-3.947734e-07\n1.596847e-07\n-3.072843e-07\n-4.988242e-08\n-6.635133e-08\n-2.287190e-08\n2.099744e-08\n\n\n2\n-4.969159\n3.992823\n-1.302479\n-0.600154\n-9.843822\n-5.562257\n-1.048905\n1.818262\n3.952401\n1.111358\n...\n9.817347e-11\n-5.280897e-07\n1.553780e-07\n6.309592e-08\n-5.242450e-07\n-4.625450e-07\n-4.705419e-07\n-8.638737e-07\n3.883673e-07\n2.376451e-08\n\n\n3\n-15.636988\n16.426058\n-7.530920\n1.706111\n-0.936780\n1.066809\n1.714377\n-7.318254\n1.925850\n-7.707973\n...\n-1.661721e-07\n2.728081e-07\n-5.830638e-07\n6.230320e-07\n4.543093e-07\n-1.929154e-06\n-1.176789e-06\n-2.363213e-07\n5.227399e-07\n-9.930091e-08\n\n\n4\n18.056057\n-29.029478\n17.150257\n0.135888\n5.629670\n-23.028900\n-2.309639\n10.667803\n-2.007716\n1.470535\n...\n-1.151849e-06\n-1.290735e-06\n-2.367621e-07\n-9.503221e-07\n5.806843e-07\n-4.158953e-07\n-4.622196e-07\n5.449358e-08\n5.199091e-07\n-9.604094e-08\n\n\n\n\n5 rows × 1111 columns",
    "crumbs": [
      "Documentation",
      "Tutorials",
      "Basic JUMP data access"
    ]
  }
]